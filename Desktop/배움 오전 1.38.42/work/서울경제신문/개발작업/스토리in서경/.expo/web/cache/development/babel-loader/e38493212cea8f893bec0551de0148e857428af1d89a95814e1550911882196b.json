{"ast":null,"code":"import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport StoryResultScreen from \"./src/screens/StoryResultScreen\";\nimport NewsDetail from \"./src/screens/NewsDetail\";\nimport IssueTimeline from \"./src/screens/IssueTimeline\";\nimport AspenHomeScreen from \"./src/screens/AspenHomeScreen\";\nimport AspenDetailScreen from \"./src/screens/AspenDetailScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsx(SafeAreaProvider, {\n    children: _jsxs(NavigationContainer, {\n      children: [_jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsxs(Stack.Navigator, {\n        initialRouteName: \"Home\",\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            title: \"Story in 서울경제\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"StoryResult\",\n          component: StoryResultScreen,\n          options: function options(_ref) {\n            var route = _ref.route;\n            return {\n              title: `\"${route.params.keyword}\" 스토리`\n            };\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"NewsDetail\",\n          component: NewsDetail,\n          options: function options(_ref2) {\n            var route = _ref2.route;\n            return {\n              title: route.params.title\n            };\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"IssueTimeline\",\n          component: IssueTimeline,\n          options: function options(_ref3) {\n            var route = _ref3.route;\n            return {\n              title: `${route.params.issue.topic}`\n            };\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AspenHome\",\n          component: AspenHomeScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AspenDetail\",\n          component: AspenDetailScreen,\n          options: {\n            headerShown: false\n          }\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","StatusBar","SafeAreaProvider","HomeScreen","StoryResultScreen","NewsDetail","IssueTimeline","AspenHomeScreen","AspenDetailScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","children","style","Navigator","initialRouteName","Screen","name","component","options","title","_ref","route","params","keyword","_ref2","_ref3","issue","topic","headerShown"],"sources":["/Users/yeong-gwang/Desktop/배움 오전 1.38.42/work/서울경제신문/개발작업/스토리in서경/App.tsx"],"sourcesContent":["import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n// 폰트 로딩은 일단 주석 처리\n// import { useFonts } from \"expo-font\";\n// import * as SplashScreen from \"expo-splash-screen\";\n\n// RootStackParamList 타입 임포트\nimport { RootStackParamList } from \"./src/types/navigation\";\n\n// 화면 import\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport StoryResultScreen from \"./src/screens/StoryResultScreen\";\nimport NewsDetail from \"./src/screens/NewsDetail\";\nimport IssueTimeline from \"./src/screens/IssueTimeline\";\nimport AspenHomeScreen from \"./src/screens/AspenHomeScreen\";\nimport AspenDetailScreen from \"./src/screens/AspenDetailScreen\";\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\n// 스플래시 화면 유지 비활성화\n// SplashScreen.preventAutoHideAsync();\n\nexport default function App() {\n  // 폰트 로드 비활성화 - 추후 폰트 파일 추가 후 활성화\n  /* \n  const [fontsLoaded] = useFonts({\n    \"Montserrat-Regular\": require(\"./assets/fonts/Montserrat-Regular.ttf\"),\n    \"Montserrat-Medium\": require(\"./assets/fonts/Montserrat-Medium.ttf\"),\n    \"Montserrat-SemiBold\": require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\n    \"Montserrat-Bold\": require(\"./assets/fonts/Montserrat-Bold.ttf\"),\n    \"CircularXX-Book\": require(\"./assets/fonts/CircularXX-Book.ttf\"),\n    \"CircularXX-Regular\": require(\"./assets/fonts/CircularXX-Regular.ttf\"),\n    \"CircularXX-Medium\": require(\"./assets/fonts/CircularXX-Medium.ttf\"),\n    \"CircularXX-Bold\": require(\"./assets/fonts/CircularXX-Bold.ttf\"),\n  });\n\n  React.useEffect(() => {\n    if (fontsLoaded) {\n      SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  */\n\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer>\n        <StatusBar style=\"auto\" />\n        <Stack.Navigator initialRouteName=\"Home\">\n          <Stack.Screen\n            name=\"Home\"\n            component={HomeScreen}\n            options={{ title: \"Story in 서울경제\" }}\n          />\n          <Stack.Screen\n            name=\"StoryResult\"\n            component={StoryResultScreen}\n            options={({ route }) => ({\n              title: `\"${route.params.keyword}\" 스토리`,\n            })}\n          />\n          <Stack.Screen\n            name=\"NewsDetail\"\n            component={NewsDetail}\n            options={({ route }) => ({ title: route.params.title })}\n          />\n          <Stack.Screen\n            name=\"IssueTimeline\"\n            component={IssueTimeline}\n            options={({ route }) => ({ title: `${route.params.issue.topic}` })}\n          />\n          <Stack.Screen\n            name=\"AspenHome\"\n            component={AspenHomeScreen}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"AspenDetail\"\n            component={AspenDetailScreen}\n            options={{ headerShown: false }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,gBAAgB,QAAQ,gCAAgC;AASjE,OAAOC,UAAU;AACjB,OAAOC,iBAAiB;AACxB,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,eAAe;AACtB,OAAOC,iBAAiB;AAAwC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEhE,IAAMC,KAAK,GAAGb,oBAAoB,CAAqB,CAAC;AAKxD,eAAe,SAASc,GAAGA,CAAA,EAAG;EAyB5B,OACEJ,IAAA,CAACR,gBAAgB;IAAAa,QAAA,EACfH,KAAA,CAACb,mBAAmB;MAAAgB,QAAA,GAClBL,IAAA,CAACT,SAAS;QAACe,KAAK,EAAC;MAAM,CAAE,CAAC,EAC1BJ,KAAA,CAACC,KAAK,CAACI,SAAS;QAACC,gBAAgB,EAAC,MAAM;QAAAH,QAAA,GACtCL,IAAA,CAACG,KAAK,CAACM,MAAM;UACXC,IAAI,EAAC,MAAM;UACXC,SAAS,EAAElB,UAAW;UACtBmB,OAAO,EAAE;YAAEC,KAAK,EAAE;UAAgB;QAAE,CACrC,CAAC,EACFb,IAAA,CAACG,KAAK,CAACM,MAAM;UACXC,IAAI,EAAC,aAAa;UAClBC,SAAS,EAAEjB,iBAAkB;UAC7BkB,OAAO,EAAE,SAATA,OAAOA,CAAAE,IAAA;YAAA,IAAKC,KAAK,GAAAD,IAAA,CAALC,KAAK;YAAA,OAAQ;cACvBF,KAAK,EAAE,IAAIE,KAAK,CAACC,MAAM,CAACC,OAAO;YACjC,CAAC;UAAA;QAAE,CACJ,CAAC,EACFjB,IAAA,CAACG,KAAK,CAACM,MAAM;UACXC,IAAI,EAAC,YAAY;UACjBC,SAAS,EAAEhB,UAAW;UACtBiB,OAAO,EAAE,SAATA,OAAOA,CAAAM,KAAA;YAAA,IAAKH,KAAK,GAAAG,KAAA,CAALH,KAAK;YAAA,OAAQ;cAAEF,KAAK,EAAEE,KAAK,CAACC,MAAM,CAACH;YAAM,CAAC;UAAA;QAAE,CACzD,CAAC,EACFb,IAAA,CAACG,KAAK,CAACM,MAAM;UACXC,IAAI,EAAC,eAAe;UACpBC,SAAS,EAAEf,aAAc;UACzBgB,OAAO,EAAE,SAATA,OAAOA,CAAAO,KAAA;YAAA,IAAKJ,KAAK,GAAAI,KAAA,CAALJ,KAAK;YAAA,OAAQ;cAAEF,KAAK,EAAE,GAAGE,KAAK,CAACC,MAAM,CAACI,KAAK,CAACC,KAAK;YAAG,CAAC;UAAA;QAAE,CACpE,CAAC,EACFrB,IAAA,CAACG,KAAK,CAACM,MAAM;UACXC,IAAI,EAAC,WAAW;UAChBC,SAAS,EAAEd,eAAgB;UAC3Be,OAAO,EAAE;YAAEU,WAAW,EAAE;UAAM;QAAE,CACjC,CAAC,EACFtB,IAAA,CAACG,KAAK,CAACM,MAAM;UACXC,IAAI,EAAC,aAAa;UAClBC,SAAS,EAAEb,iBAAkB;UAC7Bc,OAAO,EAAE;YAAEU,WAAW,EAAE;UAAM;QAAE,CACjC,CAAC;MAAA,CACa,CAAC;IAAA,CACC;EAAC,CACN,CAAC;AAEvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}